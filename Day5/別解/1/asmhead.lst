     1                                  ;har1b0os boot asm
     2                                  ;TAB=4
     3                                  
     4                                  BOTPAK  EQU    0x00280000    ; bootpackのロード先
     5                                  DSKCAC  EQU    0x00100000    ; ディスクキャッシュの場所
     6                                  DSKCAC0 EQU    0x00008000    ; ディスクキャッシュの場所（リアルモード）
     7                                  
     8                                  ; BOOT_INFO関係
     9                                  ; > メモしている場所は0x0ff0番地周辺ですが、メモリマップによるとこのへんも誰にも使われていないようでした
    10                                  CYLS    EQU     0x0ff0      ; ブートセクタが設定する
    11                                  LEDS    EQU     0x0ff1      ; LED STATE
    12                                  VMODE   EQU     0x0ff2      ; VIDEO MODE | 色数に関する情報（何ビットカラーか）
    13                                  SCRNX   EQU     0x0ff4      ; SCREEN X   | 解像度X
    14                                  SCRNY   EQU     0x0ff6      ; SCREEN Y   | 解像度Y
    15                                  VRAM    EQU     0x0ff8      ; VIDEO RAM  | グラフィックバッファの開始番地
    16                                  
    17                                          ORG     0xc200      ; 0xc200 = 0x8000 + 0x4200
    18                                                              ; イメージファイルの 0x4200 アドレス番目に書き込まれている
    19                                                              ; また,先で 0x8000 以降を使うことに決めている
    20                                  
    21                                  ; ビデオモード(画面モード)設定
    22                                  ;   戻り値：なし
    23 00000000 B013                            MOV     AL, 0x13    ; VGA graphics, 320x200x(8 bit color)
    24 00000002 B400                            MOV     AH, 0x00
    25 00000004 CD10                            INT     0x10
    26                                  
    27                                  ; 画面モードをメモする
    28 00000006 C606F20F08                      MOV     BYTE [VMODE], 8           ; Video MODE
    29 0000000B C706F40F4001                    MOV     WORD [SCRNX], 320         ; SCReeN X
    30 00000011 C706F60FC800                    MOV     WORD [SCRNY], 200         ; SCReeN Y
    31 00000017 66C706F80F00000A00              MOV     DWORD [VRAM], 0x000a0000  ; Video RAM
    32                                                                            ; > VRAMは0xa0000～0xaffffの64KBです。厳密に言うと、320x200=64000なので、62.5KBですが.
    33                                                                            ;
    34                                                                            ; > [VRAM]に 0xa0000 を入れるのですが、PC の世界で VRAM はビデオラムのことで
    35                                                                            ; > 「video RAM」と書き、画面用のメモリのこと。このメモリは、もちろんデータを記憶することがい
    36                                                                            ; > つも通りできる。しかしVRAMは普通のメモリ以上の存在で、それぞれの番地が画面上の画素に対応
    37                                                                            ; > していて、これを利用することで画面に絵を出すことができる。
    38                                  
    39                                   
    40                                  				        
    41                                  ;キーロック＆シフト状態取得
    42                                  ;   AH = 0x02;
    43                                  ;   戻り値：
    44                                  ;   AL == 状態コード：
    45                                  ; BIOS (16 bit mode) から情報を取得
    46 00000020 B402                            MOV     AH, 0x02    ; キーロック＆シフト状態取得
    47 00000022 CD16                            INT     0x16        ; Keyboard BIOS
    48 00000024 A2F10F                          MOV     [LEDS], AL  ; LED State
    49                                  
    50                                  ; PICが一切の割り込みを受け付けないようにする
    51                                  ; AT互換機の仕様では、PICの初期化をするなら、
    52                                  ; こいつをCLI前にやっておかないと、たまにハングアップする
    53                                  ; PICの初期化はあとでやる
    54                                  
    55 00000027 B0FF                            MOV     AL, 0xff
    56 00000029 E621                            OUT     0x21, AL
    57 0000002B 90                              NOP                   ; OUT命令を連続させるとうまくいかない機種があるらしいので
    58 0000002C E6A1                            OUT     0xa1, AL
    59                                  
    60 0000002E FA                              CLI                   ; さらにCPUレベルでも割り込み禁止
    61                                  
    62                                  ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
    63                                  
    64 0000002F E8B500                          CALL waitkbdout
    65 00000032 B0D1                            MOV  AL,0xd1
    66 00000034 E664                            OUT  0x64,AL
    67 00000036 E8AE00                          CALL waitkbdout
    68 00000039 B0DF                            MOV  AL,0xdf          ; enable A20
    69 0000003B E660                            OUT  0x60,AL
    70 0000003D E8A700                          CALL waitkbdout
    71                                  
    72                                  ; プロテクトモード移行
    73                                          
    74                                  		        ;[INSTRSET "i486p"]    ; i486の命令まで使いたいという記述
    75                                  		        ; ここで指定するのではなくgccでcompileする際にi486で指定
    76                                  
    77 00000040 0F0116[2A01]                    LGDT [GDTR0]   ; 暫定GDTを設定
    78 00000045 0F20C0                          MOV  EAX,CR0
    79 00000048 6625FFFFFF7F                    AND  EAX,0x7fffffff ; bit31を0にする（ページング禁止のため）
    80 0000004E 6683C801                        OR  EAX,0x00000001 ; bit0を1にする（プロテクトモード移行のため）
    81 00000052 0F22C0                          MOV  CR0,EAX
    82 00000055 EB00                            JMP  pipelineflush
    83                                  pipelineflush:
    84 00000057 B80800                          MOV  AX,1*8   ;  読み書き可能セグメント32bit
    85 0000005A 8ED8                            MOV  DS,AX
    86 0000005C 8EC0                            MOV  ES,AX
    87 0000005E 8EE0                            MOV  FS,AX
    88 00000060 8EE8                            MOV  GS,AX
    89 00000062 8ED0                            MOV  SS,AX
    90                                  
    91                                  ; bootpackの転送
    92                                  
    93 00000064 66BE[30010000]                  MOV  ESI,bootpack ; 転送元
    94 0000006A 66BF00002800                    MOV  EDI,BOTPAK  ; 転送先
    95 00000070 66B900000200                    MOV  ECX,512*1024/4
    96 00000076 E87500                          CALL memcpy
    97                                  
    98                                  ; ついでにディスクデータも本来の位置へ転送
    99                                  
   100                                  ; まずはブートセクタから
   101                                  
   102 00000079 66BE007C0000                    MOV  ESI,0x7c00  ; 転送元
   103 0000007F 66BF00001000                    MOV  EDI,DSKCAC  ; 転送先
   104 00000085 66B980000000                    MOV  ECX,512/4
   105                                          ;MOV  ECX, 128
   106 0000008B E86000                          CALL memcpy
   107                                  
   108                                  ; 残り全部
   109                                  
   110 0000008E 66BE00820000                    MOV  ESI,DSKCAC0+512 ; 転送元
   111 00000094 66BF00021000                    MOV  EDI,DSKCAC+512 ; 転送先
   112 0000009A 66B900000000                    MOV  ECX,0
   113 000000A0 8A0EF00F                        MOV  CL,BYTE [CYLS]
   114 000000A4 6669C900120000                  IMUL ECX,512*18*2/4 ; シリンダ数からバイト数/4に変換
   115 000000AB 6681E980000000                  SUB  ECX,512/4  ; IPLの分だけ差し引く
   116 000000B2 E83900                          CALL memcpy
   117                                  
   118                                  
   119                                  
   120                                          
   121                                  ; bootpackの起動
   122                                  
   123 000000B5 66BB00002800                    MOV  EBX,BOTPAK
   124 000000BB 66678B4B10                      MOV  ECX,[EBX+16]
   125 000000C0 6683C103                        ADD  ECX,3   ; ECX += 3;
   126 000000C4 66C1E902                        SHR  ECX,2   ; ECX /= 4;
   127 000000C8 7410                            JZ  skip   ; 転送するべきものがない
   128 000000CA 66678B7314                      MOV  ESI,[EBX+20] ; 転送元
   129 000000CF 6601DE                          ADD  ESI,EBX
   130 000000D2 66678B7B0C                      MOV  EDI,[EBX+12] ; 転送先
   131 000000D7 E81400                          CALL memcpy
   132                                  skip:
   133 000000DA 66678B630C                      MOV  ESP,[EBX+12] ; スタック初期値
   134 000000DF 66EA1B0000001000                JMP  DWORD 2*8:0x0000001b
   135                                  
   136                                  waitkbdout:
   137 000000E7 E464                            IN   AL,0x64
   138 000000E9 2402                            AND   AL,0x02
   139 000000EB 75FA                            JNZ  waitkbdout  ; ANDの結果が0でなければwaitkbdoutへ
   140 000000ED C3                              RET
   141                                  
   142                                  memcpy:
   143 000000EE 66678B06                        MOV  EAX,[ESI]
   144 000000F2 6683C604                        ADD  ESI,4
   145 000000F6 66678907                        MOV  [EDI],EAX
   146 000000FA 6683C704                        ADD  EDI,4
   147 000000FE 6683E901                        SUB  ECX,1
   148 00000102 75EA                            JNZ  memcpy   ; 引き算した結果が0でなければmemcpyへ
   149 00000104 C3                              RET
   150                                  ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   151                                  
   152 00000105 <res 0000000B>                  ALIGNB 16
   152          ******************       warning: uninitialized space declared in .text section: zeroing
   153                                  GDT0:
   154 00000110 <res 00000008>                  RESB 8    ; ヌルセレクタ
   154          ******************       warning: uninitialized space declared in .text section: zeroing
   155 00000118 FFFF00000092CF00                DW  0xffff,0x0000,0x9200,0x00cf ; 読み書き可能セグメント32bit
   156 00000120 FFFF0000289A4700                DW  0xffff,0x0000,0x9a28,0x0047 ; 実行可能セグメント32bit（bootpack用）
   157                                  
   158 00000128 0000                            DW  0
   159                                  GDTR0:
   160 0000012A 1700                            DW  8*3-1
   161 0000012C [10010000]                      DD  GDT0
   162                                  
   163                                          ALIGNB 16
   164                                  bootpack:
